apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fediscoverer.fullname" . }}-web
  labels:
    {{- include "fediscoverer.labels" . | nindent 4 }}
    joinmastodon.org/component: fediscoverer-web
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "fediscoverer.selectorLabels" . | nindent 6 }}
      joinmastodon.org/component: fediscoverer-web
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fediscoverer.selectorLabels" . | nindent 8 }}
        joinmastodon.org/component: fediscoverer-web
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-web
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DOMAIN
              value: {{ .Values.config.domain }}
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secretKeyBase.secretKeyRef.name }}
                  key: {{ .Values.config.secretKeyBase.secretKeyRef.key }}
            - name: DATABASE_URL
              value: {{ include "fediscoverer.database.uri" . }}
            - name: FEDISCOVERER_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.database.password.secretKeyRef.name }}
                  key: {{ .Values.config.database.password.secretKeyRef.key }}
            {{- if .Values.metrics.prometheus.enabled }}
            - name: PROMETHEUS_EXPORTER_ENABLED
              value: "true"
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /up
              port: http
          readinessProbe:
            httpGet:
              path: /up
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.metrics.prometheus.enabled }}
        - name: prometheus-exporter
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - ./bin/prometheus_exporter
          args:
            - "--bind"
            - "0.0.0.0"
            - "--port"
            - "{{ .Values.metrics.prometheus.port }}"
          resources:
            requests:
              cpu: "0.1"
              memory: "180M"
            limits:
              cpu: "0.5"
              memory: "250M"
          ports:
            - name: prometheus
              containerPort: {{ .Values.metrics.prometheus.port }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
