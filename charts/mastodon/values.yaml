# Default values for mastodon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Image to use for all Mastodon pods
image:

  # https://github.com/mastodon/mastodon/pkgs/container/mastodon
  repository: ghcr.io/mastodon/mastodon

  # Overrides the image tag whose default is the chart appVersion.
  # Additionally, we have tags for:
  #   - latest:   Current official build
  #   - nightly:  Built every night at 2AM UTC
  #   - edge:     Most recent commit
  tag: ""

  # Use `Always` when using mutable tags like `latest`, `edge` or `nightly`.
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Configuration for the Mastodon app.
mastodon:

  # The number of old revisions to keep for each Deployment in Kubernetes.
  # https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy
  revisionHistoryLimit: 2

  # Sets the default locale for this server.
  # Instance will detect the user's browser language, otherwise it will fall
  # back to this value.
  #
  # For a list of locales, please see:
  # https://docs.joinmastodon.org/admin/config/#default_locale
  locale:

  # Do not detect the user's browser language, and use `locale` instead.
  forceLocale: false

  # The domain that this Mastodon instance will be reachable from.
  localDomain: mastodon.local

  # If you want the Mastodon instance to be on a different domain than the user
  # tags, specify the instance domain here.
  #
  # Use of WEB_DOMAIN requires careful consideration.
  # You must redirect LOCAL_DOMAIN/.well-known/ to WEB_DOMAIN/.well-known/ as described.
  # Please refer to: https://docs.joinmastodon.org/admin/config/#federation
  #
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/config/#web_domain
  # Example: mastodon.example.com
  webDomain:

  # If you have multiple domains pointed at your Mastodon server, this setting
  # will allow Mastodon to recognize itself when users are addressed using those
  # other domains.
  alternateDomains: []

  # Comma-separated list of public IP addresses of trusted reverse proxy servers
  # reaching Mastodon web and streaming servers. Specifying overrides default
  # list.
  #
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/config/#trusted_proxy_ip
  trustedProxyIp:

  # If set to true, the frontpage of your Mastodon server will always redirect
  # to the first profile in the database and registrations will be disabled.
  singleUserMode: false

  # Enables "Secure Mode".
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/config/#authorized_fetch
  authorizedFetch: false

  # Enables "Limited Federation Mode", restricting federation to servers you
  # have manually approved.
  #
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/config/#limited_federation_mode
  limitedFederationMode: false

  # Create an initial administrator user.
  # The password is autogenerated and will have to be reset.
  createAdmin:

    enabled: false
    username: not_gargron
    email: not@example.com

    # Nodes on which this job will run.
    nodeSelector: {}

  # Configuration for various pre- and post-install hooks
  hooks:

    # Whether to perform DB schema creation on `helm install`.
    # This job should always be run on first install.
    #
    # NOTE: When using certain GitOps solutions such as Argo CD, this should be
    # disabled, as these apps do not necessarily differentiate between `pre-install`
    # and `pre-upgrade`.
    dbPrepare:
      enabled: true

      # Nodes on which this job will run.
      nodeSelector: {}

    # Whether to perform any DB migrations that are pending on `helm upgrade`.
    dbMigrate:
      enabled: true

      # Nodes on which this job will run.
      nodeSelector: {}

    # Builds or rebuilds the elasticsearch indices via `tootctl deploy search`
    # with timing hooks to ensure the job runs immediately after install/upgrade
    # and will be restarted if another, corrective upgrade is triggered.
    #
    # !! WARNING !!: deploySearch is potentially a very expensive job!
    # Only enable this once at a time, when you deploy elasticsearch or when
    # the upgrade notes for a new mastodon version request rebuilding search.
    # Recommended use is via `-f mastodon.hooks.deploySearch.enabled=true`
    # to ensure the job is only dispatched for a single upgrade when required.
    # This job may take days to run on very large instances. Even small
    # instances may take long enough to trigger helm's completion timeout, so
    # DO NOT PANIC if helm complains; simply verify the job is still running.
    #
    # NOTE: The resource stanza set below is intentionally very conservative.
    # Consider assigning a liberal chunk of your cluster's typical headroom.
    #
    # For more information on this job, see:
    # https://docs.joinmastodon.org/admin/tootctl/#search-deploy
    deploySearch:
      enabled: false

      # Only deploy one index.
      #Possible values: instances, accounts, tags, statuses, public_statuses.
      only: ""

      # How many threads to use when deploying the index(es).
      concurrency: 5

      resetChewy: true

      resources:
        requests:
          cpu: 250m
          memory: 256Mi
        limits:
          cpu: 500m

      # Node(s) on which this job will run.
      nodeSelector: {}

    # Upload website assets to S3 before deploying using rclone.
    #
    # Whenever there is an update to Mastodon, sometimes there are assets files
    # that are renamed. As the pods are getting redeployed, and old/new pods are
    # present simultaneously, there is a chance that old asset files are
    # requested from pods that don't have them anymore, or new asset files are
    # requested from old pods. Uploading asset files to S3 in this manner solves
    # this potential conflict.
    #
    # Note that you will need to CDN/proxy to send all requests to /assets and
    # /packs to this bucket.
    s3Upload:
      enabled: false

      # S3 connection information.
      endpoint:
      bucket:
      acl: public-read

      # S3 Access Key and Secret Key.
      accessKeyId:
      secretAccessKey:

      # May also specify a secret with the access keys. If set, takes precedence
      # over `accessKeyId` and `secretAccessKey`.
      #
      # Secret must contain the following keys:
      #   - AWS_ACCESS_KEY_ID
      #   - AWS_SECRET_ACCESS_KEY
      existingSecret:

      # Configuration for the rclone container that will preform the upload.
      rclone:

        # Any additional environment variables to pass to rclone.
        env: {}

      # Node(s) on which this job will run.
      nodeSelector: {}

  # Mastodon secrets.
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/config/#secrets
  secrets:

    secretKeyBase:

    vapidPrivateKey:
    vapidPublicKey:

    arPrimaryKey:
    arDeterministicKey:
    arKeyDerivationSalt:

    # May also specify a secret with all mastodon secrets. If set, takes
    # precedence over above values.
    #
    # Secret must contain these keys:
    #   - SECRET_KEY_BASE
    #   - OTP_SECRET
    #   - VAPID_PRIVATE_KEY
    #   - VAPID_PUBLIC_KEY
    #   - ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY
    #   - ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY
    #   - ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT
    existingSecret:

  # Configuration for web service pods.
  web:
    replicas: 1

    port: 3000

    # Puma-specific options. Below values are based on default behavior in
    # config/puma.rb when no custom values are provided.

    minThreads: "5"
    maxThreads: "5"
    workers: "2"
    persistentTimeout: "20"

    # Custom image to use for web pods.
    image:
      repository:
      tag:

    # Specify extra environment variables to be added to web pods.
    # These will be added in addition to global values.
    extraEnvVars: {}

    # Open Telemetry configuration for web pods.
    # Overrides global settings.
    otel:
      enabled:
      exporterUri:
      namePrefix:
      nameSeparator:

    # Pod/container management options for all web pods.
    # All values override their equivalent global values.

    podSecurityContext: {}
    securityContext: {}

    affinity: {}
    nodeSelector: {}
    topologySpreadConstraints: []
    tolerations: []

    resources: {}

    # Applied in addition to previously-defined values.
    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}

    # Rollout strategy to use when updating pods
    # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 10%
        maxUnavailable: 25%

    pdb:
      enable: false

  # Configuration options for Sidekiq pods.
  sidekiq:

    # Individual worker definitions.
    # Sidekiq has multiple queues that can be split up into multiple deployments
    # to make scaling more flexible. Each list item given here corresponds to
    # a separate Deployment that will be created for the given queues. By
    # default, only one deployment is created that will handle all queues.
    #
    # Example of separate deployments for queues:
    # - name: push-pull
    #   concurrency: 50
    #   resources: {}
    #   replicas: 2
    #   queues:
    #     - push
    #     - pull
    # - name: mailers
    #   concurrency: 25
    #   replicas: 2
    #   queues:
    #     - mailers
    # - name: default
    #   concurrency: 25
    #   replicas: 2
    #   queues:
    #     - default
    workers:

      - name: all-queues
        replicas: 1

        # Sidekiq queues for Mastodon that are handled by this worker.
        # Each list item is the name of a queue, plus an optional weight
        # separated by a comma.
        #
        # For more information, please see:
        # https://docs.joinmastodon.org/admin/scaling/#sidekiq
        # For more information on queue weighting, please see:
        # https://github.com/mperham/sidekiq/wiki/Advanced-Options#queues
        queues:
          - default,8
          - push,6
          - ingress,4
          - mailers,2
          - pull
          - scheduler # Make sure the scheduler queue only exists once and with a worker that has 1 replica.
          - fasp

        # Number of threads / parallel sidekiq jobs that are executed per Pod
        concurrency: 25

        # Specify a custom image for this sidekiq worker.
        # Overrides .Values.image
        image:
          repository:
          tag:

        # Pod/container management options for this worker's pods.
        # All values override their equivalent parent values.

        affinity: {}
        nodeSelector: {}
        topologySpreadConstraints: []
        tolerations: []

        resources: {}

    # Specify extra environment variables to be added to Sidekiq pods.
    # These will be added in addition to global values.
    extraEnvVars: {}

    # Open Telemetry configuration for sidekiq pods.
    # Overrides global settings.
    otel:
      enabled:
      exporterUri:
      namePrefix:
      nameSeparator:

    # Pod/container management options for all sidekiq pods.
    # All values override their equivalent global values.

    podSecurityContext: {}
    securityContext: {}

    affinity: {}
    nodeSelector: {}
    topologySpreadConstraints: []
    tolerations: []

    resources: {}

    # Applied in addition to previously-defined values.
    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}

    # Rollout strategy to use when updating pods.
    # Recreate will help reduce the number of retried jobs when updating when
    # the code introduces a new job as the pods are all replaced immediately.
    # RollingUpdate can help with larger clusters if job retries aren't an
    # issue, as it will reduce strain by replacing pods more slowly. It is
    # strongly recommended to enable the readinessProbe when using RollingUpdate.
    #
    # https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    updateStrategy:
      type: Recreate

    # Readiness probe configuration.
    # NOTE: Readiness probe will only work on versions of Mastodon built after 2024-07-10.
    readinessProbe:
      enabled: false
      path: /opt/mastodon/tmp/sidekiq_process_has_started_and_will_begin_processing_jobs
      initialDelaySeconds: 10
      periodSeconds: 2
      successThreshold: 1
      timeoutSeconds: 1

  # Configuration for the streaming API pods.
  streaming:
    replicas: 1

    image:
      repository: ghcr.io/mastodon/mastodon-streaming
      tag: ""

    port: 4000

    # This should be set manually since os.cpus() returns the number of CPUs on
    # the node running the pod, which is unrelated to the resources allocated to
    # the pod by k8s.
    workers: 1

    # The base url for streaming can be set if the streaming API is deployed to
    # a different domain/subdomain.
    baseUrl: null

    # Puma-specific options.
    # Below values are based on default behavior in config/puma.rb when no
    # custom values are provided.

    # Self-signed certificates that Node.js needs for connections (i.e. database).
    extraCerts: {}

    # Secret containing a key "ca.crt" holding one or more root certificates
    # in PEM format.
    existingSecret:

    # Optional volume name for mounting the .crt file, defaults to "extra-certs",
    name:

    # Optional sslMode setting. See nodejs's SSL_MODE. Consider "no-verify".
    sslMode:

    # Specify extra environment variables to be added to streaming pods.
    # These will be added in addition to global values.
    extraEnvVars: {}

    # Pod/container management options for all streaming pods.
    # All values override their equivalent global values.

    podSecurityContext: {}
    securityContext: {}

    affinity: {}
    nodeSelector: {}
    topologySpreadConstraints: []
    tolerations: []

    resources: {}

    # Applied in addition to previously-defined values.
    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}

    # Rollout strategy to use when updating pods.
    # https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 10%
        maxUnavailable: 25%

    # Pod distuption budget for streaming pods.
    pdb:
      enable: false

  # Configuration for S3 storage that Mastodon's persistent data will live in.
  #
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/optional/object-storage/#environment-variables-for-s3-api-access
  s3:
    enabled: false

    # Connection info.
    hostname:
    endpoint:
    region:
    bucket:

    # S3 Access Key and Secret Key.
    accessKeyId:
    secretAccessKey:

    # May also specify a secret with the access keys. If set, takes precedence
    # over `accessKeyId` and `secretAccessKey`.
    #
    # Secret must contain the following keys:
    #   - AWS_ACCESS_KEY_ID
    #   - AWS_SECRET_ACCESS_KEY
    existingSecret:

    # S3 ACL to assign to uploaded objects. Defaults to `public-read`.
    permission:

    # If a caching proxy is used, enter its base URL here.
    aliasHost:

    # When uploading data to S3, if the number of bytes to send exceedes
    # multipartThreshold then a multi part session is automatically started
    # and the data is sent up in chunks. Defaults to 16777216 (16MB).
    multipartThreshold:

    # Set this to true if the storage provider uses domain style
    # 'bucket.endpoint' naming
    overridePathStyle:

  # Configuration for content translation via deepl.
  deepl:
    enabled: false

    plan:
    apiKey:

    # May also specify a secret for the API key. If set, takes precedence over
    # `apiKey`.
    #
    # Secret must contain the following keys:
    #   - DEEPL_API_KEY
    existingSecret:

  # Configuration for hcaptcha verification on user account creation.
  hcaptcha:
    enabled: false

    siteId:
    apiKey:

    # May also specify a secret for the API key. If set, takes precedence over
    # `apiKey`.
    #
    # Secret must contain the following keys:
    #   - HCAPTCHA_SECRET_KEY
    existingSecret:

  # SMTP configuration for email delivery.
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/config/#smtp
  smtp:

    domain:
    fromAddress: notifications@example.com
    returnPath:
    replyTo:

    server: smtp.mailgun.org
    port: 587

    authMethod: plain
    caFile: /etc/ssl/certs/ca-certificates.crt
    deliveryMethod: smtp
    enableStartTls: auto
    opensslVerifyMode: peer
    tls: false

    # SMTP login information
    username:
    password:

    # May also specify a secret for authentication. If set, takes precedence over
    # `username` and `password`
    #
    # Secret must be `kubernetes.io/basic-auth` and contain the following keys:
    #   - username
    #   - password
    existingSecret:

    # Configuration for bulk/broadcast messages.
    # Some transactional email providers require customers to use a separate set
    # of SMTP credentials to send emails that are not transactional in nature.
    #
    # For more information, please see:
    # https://docs.joinmastodon.org/admin/config/#optional-bulk-email-settings
    bulk:
      enabled: false

      domain:
      fromAddress: notifications@example.com

      server: smtp.mailgun.org
      port: 587

      authMethod: plain
      caFile: /etc/ssl/certs/ca-certificates.crt
      enableStartTls: auto
      opensslVerifyMode: peer
      tls: false

      # SMTP login information
      username:
      password:

      # May also specify a secret for authentication. If set, takes precedence over
      # `username` and `password`
      #
      # Secret must be `kubernetes.io/basic-auth` and contain the following keys:
      #   - username
      #   - password
      existingSecret:

  # HTTP cache buster configuration.
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/config/#http-cache-buster
  cacheBuster:
    enabled: false
    httpMethod: "GET"

    # If the cache service requires authentication, specify the header name and
    # secret/token here.
    authHeader:
    authToken:

    # May also specify a secret for the API key. If set, takes precedence over
    # `authToken`
    #
    # Secret must contain the following keys:
    #   - auth-token
    existingSecret:

  # Configuration for metrics collection.
  metrics:

    # Settings for Prometheus metrics.
    # For more information, please see:
    # https://docs.joinmastodon.org/admin/config/#prometheus
    prometheus:
      enabled: false

      # Port for the exporter to listen on
      port: 9394

      # Prometheus for web pods
      web:
        # Collect per-controller/action metrics for every request
        detailed: false

      # Prometheus for sidekiq pods
      sidekiq:
        # Collect per-job metrics for every job
        detailed: false

  # Open Telemetry configuration for all deployments. Component-specific
  # configuration will override these values.
  otel:
    enabled: false

    # Address of the collector to send metrics to.
    exporterUri:

    namePrefix: mastodon
    nameSeparator: "-"

  # Specify extra environment variables to be added to all Mastodon pods.
  # These can be used for configuration not included in this chart, including
  # configuration for Mastodon varients and forks.
  extraEnvVars: {}

  # Alternatively specify extra environment variables stored in a ConfigMap.
  # The specified ConfigMap should contain the additional environment variables
  # in key-value format.
  extraEnvFrom:

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Service configuration.
service:
  type: ClusterIP
  port: 80

# Ingress configuration
ingress:
  enabled: true

  annotations:
    # For choosing an ingress ingressClassName is preferred over annotations
    # kubernetes.io/ingress.class: nginx
    #
    # To automatically request TLS certificates use one of the following
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt"
    #
    # ensure that NGINX's upload size matches Mastodon's
    #   for the K8s ingress controller:
    # nginx.ingress.kubernetes.io/proxy-body-size: 40m
    #   for the NGINX ingress controller:
    # nginx.org/client-max-body-size: 40m

  className:

  hosts:
    - host: mastodon.local
      paths:
        - path: "/"
          pathType: Prefix
  tls:
    - secretName: mastodon-tls
      hosts:
        - mastodon.local

  # This allows you to have a separate ingress for streaming.
  # When enabled, the main ingress will no longer handle streaming requests.
  # You will also need to configure mastodon.streaming.base_url accordingly.
  streaming:
    enabled: false

    annotations:
    className:

    hosts:
      - host: streaming.mastodon.local
        paths:
          - path: "/"
            pathType: Prefix
    tls:
      - secretName: mastodon-tls
        hosts:
          - streaming.mastodon.local

# Configuration for PostgreSQL.
postgresql:

  hostname:
  port: 5432
  database: mastodon

  # Database authentication.
  username: mastodon
  password:

  # May also specify a secret for authentication. If set, takes precedence over
  # `username` and `password`
  #
  # Secret must be `kubernetes.io/basic-auth` and contain the following keys:
  #   - username
  #   - password
  existingSecret:

  # Whether to enable prepared statement support.
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/config/#prepared_statements
  preparedStatements: true

  # If using a connection pooler such as pgbouncer, please specify a hostname/IP
  # that serves as a "direct" connection to the database, rather than going
  # through the connection pooler. This is required for migrations to work
  # properly.
  direct:
    hostname:
    port:
    database:

  # Set the password for the "postgres" admin user.
  # Not required, but can be useful for debugging.
  admin:
    password:

    # May also specify a secret for authentication. If set, takes precedence over
    # `username` and `password`
    #
    # Secret must be `kubernetes.io/basic-auth` and contain the following keys:
    #   - username
    #   - password
    existingSecret:

  # Options for a read-only replica.
  # If enabled, mastodon uses existing defaults for postgres for these values as well.
  # NOTE: This feature is only available on Mastodon v4.2+
  # Documentation for more information on this feature:
  # https://docs.joinmastodon.org/admin/scaling/#read-replicas
  readReplica:
    hostname:
    port:
    database:

    # Read replica database authentication.
    username:
    password:

    # May also specify a secret for authentication. If set, takes precedence over
    # `username` and `password`
    #
    # Secret must be `kubernetes.io/basic-auth` and contain the following keys:
    #   - username
    #   - password
    existingSecret:

# Configuration for Redis.
redis:

  hostname:
  port: 6379

  # Authentication for redis
  password:

  # May also specify a secret for authentication. If set, takes precedence over
  # `password`
  #
  # Secret must be `kubernetes.io/basic-auth` and contain the following keys:
  #   - password
  existingSecret:

  # Configuration for a separate redis instance only for sidekiq processing.
  # If enabled, any values not specified will be copied from the base config.
  # If set to false, the main redis instance will be used, and all values will
  # be ignored.
  sidekiq:
    enabled: false

    hostname:
    port: 6379

    password:

    # May also specify a secret for authentication. If set, takes precedence over
    # `password`
    #
    # Secret must be `kubernetes.io/basic-auth` and contain the following keys:
    #   - password
    existingSecret:

  # Configuration for a separate redis instance only for cache.
  # If enabled, any values not specified will be copied from the base config.
  # If set to false, the main redis instance will be used, and all values will
  # be ignored.
  cache:
    enabled: false

    hostname:
    port: 6379

    password:

    # May also specify a secret for authentication. If set, takes precedence over
    # `password`
    #
    # Secret must be `kubernetes.io/basic-auth` and contain the following keys:
    #   - password
    existingSecret:

# Configuration for Elasticsearch.
#
# If you enable ES after the initial install, you will need to enable the
# pre-install hook `deploySearch` for the initial chart install ONLY.
elasticsearch:
  enabled: true

  hostname:
  port: 9200

  # Cluster side preset. Possible values are:
  #   single_node_cluster ,small_cluster, large_cluster
  #
  # For more information, please see:
  # https://docs.joinmastodon.org/admin/elasticsearch/#choosing-the-correct-preset
  preset: single_node_cluster

  # Authentication for the cluster (optional)
  username:
  password:

  # May also specify a secret for authentication. If set, takes precedence over
  # `username` and `password`
  #
  # Secret must be `kubernetes.io/basic-auth` and contain the following keys:
  #   - username
  #   - password
  existingSecret:

  # Nodes on which the various elasticsearch pods will run.
  master:
    nodeSelector: {}
  data:
    nodeSelector: {}
  coordinating:
    nodeSelector: {}
  ingest:
    nodeSelector: {}
  metrics:
    nodeSelector: {}

# Configuration for external authentication mechanisms.
externalAuth:

  oidc:
    enabled: false

    displayName: "example-label"
    issuer: https://login.example.space/auth/realms/example-space
    discovery: true
    scope: "openid,profile"
    uidField: uid
    clientId: mastodon
    clientSecret: SECRETKEY
    redirectUri: https://example.com/auth/auth/openid_connect/callback
    assumeEmailIsVerified: true
    clientAuthMethod:
    responseType:
    responseMode:
    display:
    prompt:
    sendNonce:
    sendScopeToTokenEndpoint:
    idpLogoutRedirectUri:
    httpScheme:
    host:
    port:
    jwksUri:
    authEndpoint:
    tokenEndpoint:
    userInfoEndpoint:
    endSessionEndpoint:

  saml:
    enabled: false

    acsUrl: http://mastodon.example.com/auth/auth/saml/callback
    issuer: mastodon
    idpSsoTargetUrl: https://login.example.com/auth/realms/example/protocol/saml
    idpCert: '-----BEGIN CERTIFICATE-----[your_cert_content]-----END CERTIFICATE-----'
    idpCertFingerprint:
    nameIdentifierFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
    cert:
    privateKey:
    wantAssertionSigned: true
    wantAssertionEncrypted: true
    assumeEmailIsVerified: true
    uidAttribute: "urn:oid:0.9.2342.19200300.100.1.1"
    attributesStatements:
      uid: "urn:oid:0.9.2342.19200300.100.1.1"
      email: "urn:oid:1.3.6.1.4.1.5923.1.1.1.6"
      fullName: "urn:oid:2.16.840.1.113730.3.1.241"
      firstName: "urn:oid:2.5.4.42"
      lastName: "urn:oid:2.5.4.4"
      verified:
      verifiedEmail:

  cas:
    enabled: false

    url: https://sso.myserver.com
    host: sso.myserver.com
    port: 443
    ssl: true
    validateUrl:
    callbackUrl:
    logoutUrl:
    loginUrl:
    uidField: 'user'
    caPath:
    disableSslVerification: false
    assumeEmailIsVerified: true
    keys:
      uid: 'user'
      name: 'name'
      email: 'email'
      nickname: 'nickname'
      firstName: 'firstname'
      lastName: 'lastname'
      location: 'location'
      image: 'image'
      phone: 'phone'

  pam:
    enabled: false

    emailDomain: example.com
    defaultService: rpam
    controlledService: rpam

  ldap:
    enabled: false

    host: myservice.namespace.svc
    port: 636
    method: simple_tls
    tlsNoVerify: true
    base:
    bindDn:
    password:
    uid: cn
    mail: mail
    searchFilter: "(|(%{uid}=%{email})(%{mail}=%{email}))"
    uidConversion:
      enabled: true
      search: "., -"
      replace: _

  # Automatically redirect to OIDC, CAS or SAML, and don't use local
  # account authentication when clicking on Sign-In.
  oauthGlobal:
    omniauthOnly: false

# If you manually change the UID/GID environment variables, ensure these values
# match:
podSecurityContext:
  runAsUser: 991
  runAsGroup: 991
  fsGroup: 991

securityContext: {}

serviceAccount:
  create: true

  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

  annotations: {}


# Labels added to every Mastodon-related object
labels: {}

# Labes added to every deployed mastodon pod
podLabels: {}

# Custom annotations to apply to all created mastodon deployment objects. These
# can be used to help mastodon interact with other services in the cluster.
deploymentAnnotations: {}

# Kubernetes manages pods for jobs and pods for deployments differently, so you might
# need to apply different annotations to the two different sets of pods.
# The annotations set with podAnnotations will be added to all mastodon pods.
podAnnotations: {}

# The annotations set with jobAnnotations will be added to all mastodon job pods
jobAnnotations: {}

# If set to true, an annotation with the current chart release number will be
# added to all mastodon pods. This will cause all pods to be recreated every
# `helm upgrade` regardless of whether their config or spec changes.
revisionPodAnnotation: true

# Default resources for all mastodon Deployments and jobs unless overridden.
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Affinity for all mastodon pods unless overridden.
affinity: {}

# Node(s) on which we will deploy all resources.
# Any node selectors specified for individual resources will override this
# setting.
nodeSelector: {}

# -- Topology Spread Constraints for all mastodon pods unless overwritten
# Please note that you need to use `matchLabelKeys` (Kubernetes 1.25+) if you
# want to spread each deployment independently, or override topologySpreadConstraints
# for each deployment
topologySpreadConstraints: []

# Toleratinos for all mastodon pods unless overridden.
tolerations: []

# -- Timezone for all mastodon pods unless overwritten
timezone: UTC

# Default volume mounts for all mastodon pods
volumeMounts: []

# Default volumes for all mastodon pods
volumes: []
